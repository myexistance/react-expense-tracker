{"version":3,"sources":["components/Header.js","context/AppReducer.js","context/GlobalState.js","components/Balance.js","components/IncomeExpenses.js","components/Transaction.js","components/TransactionList.js","components/AddTransaction.js","App.js","index.js"],"names":["Header","state","action","type","transactions","filter","transaction","id","payload","initialState","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","Provider","value","deleteTransaction","addTransaction","Balance","total","useContext","map","amount","reduce","acc","item","toFixed","IncomeExpenses","amounts","income","expense","className","Transaction","sign","text","Math","abs","onClick","TransactionList","AddTransaction","useState","setText","setAmount","onSubmit","e","preventDefault","newTransaction","floor","random","htmlFor","onChange","target","placeholder","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b9191f10.chunk.js","sourcesContent":["import React from 'react'\n\nexport const Header = () => {\n          return (\n                    <h2>\n                         Expense Tracker     \n                    </h2>\n          )\n}\n","// eslint-disable-next-line\nexport default (state, action) => {\n          switch (action.type) {\n                    case 'DELETE_TRANSACTION':\n                              return {\n                                        ...state,\n                                        transactions: state.transactions.filter(transaction => transaction.id !== action.payload)\n                              }\n                    case 'ADD_TRANSACTION':\n                              return {\n                                        ...state,\n                                        transactions: [action.payload, ...state.transactions]\n                              }\n                    default:\n                              return state;\n          }\n}","import React, { createContext, useReducer } from 'react';\nimport AppReducer from './AppReducer';\n\n// Initial state\nconst initialState = {\n          transactions: [\n                                       \n          ]\n}\n\n// Create context\nexport const GlobalContext = createContext(initialState);\n\n// Provider component\nexport const GlobalProvider = ({ children }) => {\n          const [state, dispatch] = useReducer(AppReducer, initialState);\n\n          // Actions\n          function deleteTransaction(id) {\n                    dispatch({\n                              type: 'DELETE_TRANSACTION',\n                              payload: id\n                    });\n          }\n\n          function addTransaction(transaction) {\n                    dispatch({\n                              type: 'ADD_TRANSACTION',\n                              payload: transaction\n                    });\n          }\n\n          return (<GlobalContext.Provider value={{\n                    transactions: state.transactions,\n                    deleteTransaction,\n                    addTransaction\n          }}>\n                    {children}\n          </GlobalContext.Provider>);\n}","import React, { useContext } from 'react';\nimport { GlobalContext } from '../context/GlobalState';    \n\nexport const Balance = () => {\n          const { transactions } = useContext(GlobalContext);\n          const amounts = transactions.map(transaction => transaction.amount);\n          const total = amounts.reduce((acc, item) => (acc += item), 0).toFixed(2);\n\n          return (\n                    <>\n                      <h4>Your Balance</h4>\n                      <h1>${total}</h1>\n                    </>\n          )\n}\n","import React, { useContext } from 'react';\nimport { GlobalContext } from '../context/GlobalState';    \n\nexport const IncomeExpenses = () => {\n          const { transactions } = useContext(GlobalContext);\n\n          const amounts = transactions.map(transaction => transaction.amount);\n\n          const income = amounts\n                    .filter(item => item > 0)\n                    .reduce((acc, item) => (acc += item), 0)\n                    .toFixed(2);\n\n          const expense = (\n                    amounts.filter(item => item < 0).reduce((acc, item) => (acc += item), 0) *\n                    -1\n          ).toFixed(2);\n\n\n\n          return (\n                    <div className=\"inc-exp-container\">\n                              <div>\n                                        <h4>Income</h4>\n                                        <p className=\"money plus\">{income}</p>\n                              </div>\n                              <div>\n                                        <h4>Expense</h4>\n                                        <p className=\"money minus\">{expense}</p>\n                              </div>   \n                    </div>\n          )\n}\n","import React, { useContext } from 'react';\nimport { GlobalContext } from '../context/GlobalState'; \n\nexport const Transaction = ({ transaction }) => {\n          const { deleteTransaction } = useContext(GlobalContext);\n\n\n          const sign = transaction.amount < 0 ? '-' : '+';\n\n          return (\n                    <li className={transaction.amount < 0 ? 'minus' : 'plus'}>\n                              {transaction.text} <span>{sign}${Math.abs(transaction.amount)}</span><button onClick={() => deleteTransaction(transaction.id)} className=\"delete-btn\">x</button>\n                    </li>\n          )\n}\n ","import React, { useContext }from 'react';\nimport { Transaction } from './Transaction';\n\nimport { GlobalContext } from '../context/GlobalState';\n\nexport const TransactionList = () => {\n          const { transactions } = useContext(GlobalContext);\n          \n          return (\n                    <>\n                              <h3>History</h3>\n                              <ul className=\"list\">\n                      {transactions.map(transaction => (<Transaction key={transaction.id} transaction={transaction} />))}\n                              \n                              </ul>\n                              \n                    </>\n          )\n}\n","import React, { useState, useContext } from 'react'\nimport { GlobalContext } from '../context/GlobalState';\n\nexport const AddTransaction = () => {\n          const [text, setText] = useState('');\n          const [amount, setAmount] = useState(0);\n\n          const { addTransaction } = useContext(GlobalContext);\n\n          const onSubmit = e => {\n                    e.preventDefault();\n\n                    const newTransaction = {\n                              id: Math.floor(Math.random() * 100000000),\n                              text,\n                              amount: +amount\n                    }\n\n                    addTransaction(newTransaction);\n          }\n\n          return (\n                    <>\n                              <h3>Add new transaction</h3>\n                              <form onSubmit={onSubmit}>\n                                        <div className=\"form-control\">\n                                                  <label htmlFor=\"text\">Text</label>\n                                                  <input type=\"text\" value={text} onChange={(e) => setText(e.target.value)} placeholder=\"Enter text...\" />\n                                        </div>\n                                        <div className=\"form-control\">\n                                                  <label htmlFor=\"amount\"\n                                                  >Amount <br />\n            (negative - expense, positive - income)</label\n                                                  >\n                                                  <input type=\"number\" value={amount} onChange={(e) => setAmount(e.target.value)} placeholder=\"Enter amount...\" />\n                                        </div>\n                                        <button className=\"btn\">Add transaction</button>\n                              </form>\n                    </>\n          )\n}","import React from 'react';\nimport { Header } from './components/Header';\nimport { Balance } from './components/Balance';\nimport { IncomeExpenses } from './components/IncomeExpenses';\nimport { TransactionList } from './components/TransactionList';\nimport { AddTransaction } from './components/AddTransaction';\n\nimport { GlobalProvider } from './context/GlobalState';\n\n\nimport './App.css';\n\n\nfunction App() {\n  return (\n    <GlobalProvider>\n      <Header />\n      <div className=\"container\">\n        <Balance />\n        <IncomeExpenses />\n        <TransactionList />\n        <AddTransaction />\n      </div>\n      </GlobalProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}